stages:
  - setup_helm
  - package_helm
  - push_container_registry
  - deploy_helm_kubernetes

variables:
  HELM_VERSION: "v3.12.0"
  PROJECT_NAME: "generation-orders"
  CHART_NAME: "generation-orders"

setup-helm:
  stage: setup_helm
  image: alpine:latest
  tags:
    - docker
  before_script:
    - echo "üîΩ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    - apk --no-cache add bash curl wget tar gzip

    - echo "üîΩ –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Helm..."
    - wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz
    - tar -zxvf helm-${HELM_VERSION}-linux-amd64.tar.gz
    - mv linux-amd64/helm /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm

  script:
    - echo "‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Helm..."
    - helm version

  only:
    - main

package-helm:
  stage: package_helm
  image: alpine:latest
  tags:
    - docker
  before_script:
    - apk add --no-cache bash curl wget tar gzip

    - echo "üîΩ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Helm..."
    - wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz
    - tar -zxvf helm-${HELM_VERSION}-linux-amd64.tar.gz
    - mv linux-amd64/helm /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm

  script:
    - echo "üì¶ –ü–∞–∫—É–µ–º Helm Chart"
    - mkdir -p charts_result/
    - helm package charts/ -d charts_result/
    - helm repo index charts_result/

    - echo "üìÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ charts_result/"
    - ls -lah charts_result/

  artifacts:
    paths:
      - charts_result/*.tgz
      - "charts_result/index.yaml"

  only:
    - main

push-helm:
  stage: push_container_registry
  image: alpine:latest
  tags:
    - docker
  needs: ["package-helm"]

  before_script:
    - apk add --no-cache bash curl wget tar gzip
    - wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz
    - tar -zxvf helm-${HELM_VERSION}-linux-amd64.tar.gz
    - mv linux-amd64/helm /usr/local/bin/helm
    - chmod +x /usr/local/bin/helm

  script:
    - echo "üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ GitLab Container Registry"
    - echo "$CI_REGISTRY_PASSWORD" | helm registry login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin

    - echo "üìÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π..."
    - ls -lah charts_result/

    - CHART_PACKAGE=$(ls charts_result/*.tgz)
    - echo "‚è´ –ó–∞–≥—Ä—É–∂–∞–µ–º Helm Chart $CHART_PACKAGE –≤ GitLab Container Registry"
    - helm push "$CHART_PACKAGE" oci://"$CI_REGISTRY_IMAGE/generation_orders"
  only:
    - main

deploy_helm:
  stage: deploy_helm_kubernetes
  image: alpine:latest
  tags:
    - docker
  variables:
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
    # SSH_PASSWORD: ""
  before_script:
    - apk add --no-cache openssh-client sshpass
  script:
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no user@host "minikube ip"
    - sshpass -p "$SSH_PASSWORD" ssh user@host "helm upgrade --install orders oci://gitlaboff.devopsf.ru:5050/mygroup1/test_project_frolovna/generation_orders/project_orders"
